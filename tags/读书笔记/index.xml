<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>读书笔记 on dailydreamer</title>
    <link>https://dailydreamer.me/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 读书笔记 on dailydreamer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 07 Aug 2017 23:45:43 +0800</lastBuildDate>
    
	<atom:link href="https://dailydreamer.me/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一种新科学(2)</title>
      <link>https://dailydreamer.me/post/2017-08-07-a-new-kind-of-science-2/</link>
      <pubDate>Mon, 07 Aug 2017 23:45:43 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2017-08-07-a-new-kind-of-science-2/</guid>
      <description>摘要 本文是我在上次挖坑之后读完沃尔夫勒姆的著作《一种新科学》后的一些感想。 《一种新科学》是一本贡献和争议并存的书籍，它深入的探讨了元胞自动机的演化，也即计算复杂性而非传统科学方法中数学公式的复杂性，作为宇宙本质的一种可能性。 本文简述了该书的成书背景和内容，探讨了争议和贡献的部分。 《一种新科学》虽然是一种视野的开阔，但是离颠覆现有的科学研究方法还相去甚远。
背景介绍 《一种新科学》是斯蒂芬·沃尔夫勒姆的一本长篇巨著。 在2002年5月14日发行之后的一个星期里，《一种新科学》初版五万册就全部销售一空，在亚马逊排行榜上一度高居榜首，成为2002年夏天最畅销的书。
作者斯蒂芬·沃尔夫勒姆1959年出生于伦敦，父亲是相当成功的作家，母亲是牛津大学的哲学教授。 他幼年聪慧，13岁入伊顿公学，15岁发表首篇粒子物理方面的学术论文。 在获得牛津大学的奖学金并在牛津学习一年之后，即到了美国阿格纳国家实验室的理论高能物理小组工作。 1978年19岁的沃尔夫勒姆受著名物理学家穆雷·盖尔曼之邀去到加州理工学院，从事基本粒子物理学方面的研究，取得显著成就，一年内获得理论物理学博士学位。 1980年沃尔夫勒姆成为加州理工学院一员，与费曼共事。 1981年被授予麦克阿瑟“天才人物”奖，并成为该奖最年轻的获得者。之后他又到了爱因斯坦度过后半生的普林斯顿高级研究所工作，再后来又成为伊利诺斯大学的物理学、数学和计算机科学教授。
1986年27岁的沃尔夫勒姆创立了以他的姓氏命名的沃尔夫勒姆研究公司，成为一位企业家。 1988年他的公司发布了Mathematica，一种科学计算软件。 由于其先进的符号计算理念，成为最广泛使用的数学软件之一。 沃尔夫勒姆也因此实现了财务自由。
其实早在1981年的时候，沃尔夫勒姆就对自然界复杂性起源这一命题产生了兴趣，但是由于研发Mathematica和忙于公司事物，这一兴趣一直被搁置。 90年代初，在Mathematica第二版发行后，公司也渐渐步上正轨。 沃尔夫勒姆便将自己的几乎全部时间都投入了研究和陪伴家人中。在新世纪的开端，百万行代码之后，这些成果变成了1200多页的长篇著作《一种新科学》。
除了畅销之外，沃尔夫勒姆还声称《一种新科学》是科学史上最为重要的一部著作，而他所做的一切不亚于牛顿的贡献。 这种豪言壮语自然十分吸引我去一探究竟。 于是在一个假期里读完了这本大部头。
内容简介 全书围绕元胞自动机这一核心概念进行展开。 元胞自动机是由上个世纪50年代乌尔姆和冯·诺伊曼为了研究机器人自我复制的可能性提出一种离散型动力系统。 元胞自动机是研究复杂系统行为的最初理论框架，也是人工智能的雏形。
设想一个平面上纵横相交的许多直线构成了许多网格，每一个网格就是一个元胞。 这些元胞可以具有一些特征状态，譬如被染成黑、白、红、绿等颜色。 在每个特定的时刻每个元胞只能处于一种特征状态中。 随着时间的增加，或者叫做叠代过程的进行，每个元胞根据周围细胞的状态，按照相同的规则自动地改变它的状态。 这就构成了一台元胞自动机。
一个元胞自动机可以由四个参数唯一决定：
 元胞活动的空间维度数 元胞可能具有的状态集合 元胞改变状态的规则 元胞自动机中各元胞的初始状态  书中主要考虑空间维度为一维的元胞自动机，元胞可能具有的状态只有两种，用颜色表示成黑色或白色，一个元胞只根据自己的状态和相邻的两个元胞的状态来改变自己的状态。 可以很容易计算出这样的一维元胞自动机的规则数有2^8=256种。
如图1所示，上面是第110（二进制01101110）号元胞自动机的规则，下面是其20步之后的状态（0代表白，1代表黑），初始状态为一个黑色元胞。 20步时一切似乎都还跟规则一样简单有规律。 但是如图2所示，250步之后，一些结构开始既不是周期性地也不是完全随机地出现在画面上。
沃尔夫勒姆探索了这256种元胞自动机，以及更高维的2维和3维的情况，发现复杂性增加了但是模式类似。他将元胞自动机划分为四种模式：
 只生成简单重复的图案，比如全黑、全白、或黑白相间如国际象棋棋盘等等 产生一些自相似的分形图案，形成稳定的嵌套结构 产生的图案具有明显的随机性 产生的图案既不是规则的也不是完全随机的复杂图案。它们呈现出某种有序性，但却不能被预测。  第四类元胞自动机是沃尔夫勒姆最感兴趣的，而规则30号和110号则是其中最有代表性的。
书中将随机分为了三类：一是每一步输入都随机结果随机，二是初始输入随机结果随机，如混沌效应，三则是系统内在的随机性，与输入无关。 第四类元胞自动机即是这类。甚至Mathematica的伪随机数生成器都是用30号元胞自动机实现的。 而自然界的许多现象也是如此，那么这种元胞自动机和自然现象有什么关系呢？
一方面来看，宏观上看似连续的事物微观上可能是离散的，比如水流和空气在微观尺度下都是一个个分子。 另一方面，在1994年，数学家马修·库克证明了110号元胞自动机是图灵完备的。 所谓图灵完备即是说它能像计算机一样完成所有的计算任务。
之后的几章里，沃尔夫勒姆用元胞自动机完成了乘法、除法运算，和求素数、求平方根、求π值，甚至解偏微分方程。 并把一维元胞自动机扩展到多维元胞自动机，产生更高的复杂程度，模拟了雪花、生物细胞等等。
更进一步，弹子球、纸牌游戏、布朗运动、三体问题等等问题中的随机性都可以用元胞自动机来解释； 流体的湍流、晶体生长的规律、华尔街股票的涨落也都可用元胞自动机来模拟； 还有自然界中的树叶、贝壳、生物色素沉着等，元胞自动机能生成与它们一模一样的图案和形态。
传统科学在解释这些问题上展示了惊人的复杂性，有些问题甚至不能很好的解释，而沃尔夫勒姆用元胞自动机简单直接的解释了这一切。
之后，他试图使用元胞自动机来解释整个宇宙，认为宇宙就是一个元胞自动机，从简单的规律中产生复杂性。
同行对《一种新科学》的一些评价 在《一种新科学》出版之后，由于其畅销和沃尔夫勒姆可以称之为狂妄的一些论调，很多科学家也对这本书发表了自己的评价。
对生物学，事实上沃尔夫勒姆所举的只是一些有限的简单的生物学例子，就得出结论说许多生物体上的差异最终几乎都与自然选择无关，有点过于武断。 也有人批评作者缺乏必要的生物学知识，而元胞自动机也从来没有产生出一种比一条蚯蚓更复杂的生物来。 或许应该肯定沃尔夫勒姆在《新科学》里给出了一些好的事例，它们说明自然选择学说还不能解释某一种生物体上的复杂特征。这属于科学，但不是新的。 生物学家们知道得很清楚，自然选择学说不能预言某一匹斑马身上的特殊条纹，就好比物理学家们知道通过解算微分方程不能预测一年之后的天气。</description>
    </item>
    
    <item>
      <title>游戏化 Gamification</title>
      <link>https://dailydreamer.me/post/2017-05-21-gamification/</link>
      <pubDate>Sun, 21 May 2017 16:42:02 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2017-05-21-gamification/</guid>
      <description>好久不写博客，把前端重写了一下之后又有了写点什么的冲动。 先把之前囤积的一些内容拿来充充数吧。 这篇是我在Coursera上浏览的一门课程Gamification的总结。 Gamification，译作游戏化，是用游戏元素和游戏设计思想去解决非游戏中的问题。 可以看到这里要解决的问题是非游戏的，只是运用了游戏中的元素和设计思想，所以不要一拍脑袋把游戏化等同于做一个游戏。
那么我为什么对游戏化感兴趣呢，当然是喜欢打游戏啊摔是因为之前在做一个儿童坐姿检测和矫正的项目。 对于成人来说，事情比较简单，愿意去买这个产品的人，你只要提醒他，他便会自己注意改正姿势，事实上Amazon上一款畅销的产品正是这么做的。 但是儿童比较复杂，一般是家长或者学校老师买来产品然后督促他们使用，这时候他们很容易产生很强的逆反心理。 如果只是提醒甚至是惩罚的话，会加重他们的反抗心，比如你不盯着的时候他就不用，或者是伪造一些数据（这种事情我小时候也干过哈哈），这样就违背了产品的初心，削弱了客户价值。 所以一些短期的和长期的激励机制是很有必要的，而这正是游戏化可以做到的。 那么我们言归正传，看看课程里都讲了些什么。
1. 什么是游戏化 游戏化就是用游戏元素和游戏设计思想去解决非游戏中的问题。 两个比较容易理解的例子，一个是Nike+，一个跑步App，使用各种徽章和等级来提升你跑步的激励； 另一个是Zombies Run，也是一个跑步App，设定是你处在一个充满僵尸的世界中，只有拼命奔跑才能拯救自己，比如跑的慢了就会听到僵尸离自己越来越近的声音，通过这种游戏设计来激励你完成跑步计划。
可以看到这里游戏元素指的有分数、任务、资源、虚拟形象、奖励等。 游戏设计思想，指的是就像Zombies Run那样，像一个游戏设计者一样思考这个问题，这一点后面慢慢展开。
游戏化可以被用在三种方面产生价值：
 外部。比如市场、销售、客户参与等活动中。 内部。比如HR、增强生产力、众包等。 行为改变。比如养成健康生活习惯、健身、理财等等。  这里举一个行为改变的例子。 在超速检测的牌子上显示一个彩票抽奖标识，只要没有超速便可参与抽奖，奖金由超速罚单中抽出一部分来构成。 当人们看到没超速可以抽奖的时候，相比之前更加注意自己的车速，从而改变了行为。
总而言之，游戏化可以产生激励作用，并且让人感到有趣。
2. 游戏 游戏化的方法是从游戏中借鉴而来。我认为其中最核心的就是有趣。
什么是游戏? 游戏是由一个松散的目标，一些基本的规则，一个放松的状态构成。 是一个你自愿去克服一些不必要的阻碍的过程。 游戏是一个神奇的圆圈，在这个圈中，你自愿遵循游戏的规则而忽略现实世界的规则。
游戏是一系列有意义的选择 游戏的过程就是一系列有意义的选择（人生又何尝不是呢）。 因此需要维持一些元素的平衡，来保持选择的有意义。 比如规则的限制和对世界的探索，限制太死变失去了一些意外的乐趣，而没有限制的探索则容易让玩家找不到目标。 再比如学习技能和解决问题的平衡等。
3. 游戏化思考 为什么游戏化？ 一个例子，Foursquare通过给在一个地点签到积极的玩家市长称号和徽章来激励玩家参与签到活动。 可以看出，游戏化至少有如下几个好处：激励参与，可视化进度，增加社交，习惯养成。 拿Foursquare例子来说，市长称号和徽章作为奖励十分有趣，激励了人们的参与。 获得徽章的人会把它分享到社交网络，满足自己小小的成就感和虚荣心，这促进了社交。 通过称号和徽章的完成进度可以可视化之前很难直观看到的数据。 而持续的激励则会促进习惯的养成。
像游戏设计师一样思考 每天对着镜子大声念三遍：“我是游戏设计师！”。。。
但是，像游戏设计师一样思考，并不同于成为游戏设计师，也不同于想玩家一样思考。 而是将系统的参与者想象成玩家。
 玩家是游戏的中心 玩家希望有控制感 玩家专心在玩上  所以你的目标就是让玩家们开始玩，一直玩。
设计规则 玩家的旅程被称作英雄之路
 开始的时候要有教学导引，高亮重要的点，提供反馈，提供有限的选项后面再慢慢增加，并且不要让他失败 之后开始整个旅程的框架 最后通过不断练习达到精通  这其中挫折和成就感要相辅相成，恰到好处。</description>
    </item>
    
    <item>
      <title>移动端体验</title>
      <link>https://dailydreamer.me/post/2016-06-16-mobile-application-experience/</link>
      <pubDate>Thu, 16 Jun 2016 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2016-06-16-mobile-application-experience/</guid>
      <description>前段时间在Edx上浏览了一门课程Mobile Application Experiences，听课笔记记录如下。
Come up an idea Research method  observation location tour: park, office&amp;hellip; contextual inquiring: working, workout&amp;hellip; think aloud diary logging: taking photo, recording video&amp;hellip; close to the time that happened interview: ask last time they do something rather than the general situation  look at what they are frustrating to do. What kind of role the environment is playing.
Analyze data  flow models: analyze how data flow transfer between subjects conversation analyze: look at the conversation of subjects related to a subject critical incident analyze: look at the place where people get stuck affinity analyze  Affinity analyze From data(bottom up) to find themes.</description>
    </item>
    
    <item>
      <title>买基金给我加薪</title>
      <link>https://dailydreamer.me/post/2016-06-15-fund-tips/</link>
      <pubDate>Wed, 15 Jun 2016 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2016-06-15-fund-tips/</guid>
      <description>一本有关基金的入门书籍，一些基本知识和理念。
术语 选中长期绩效好的基金。
所选择的基金公司不能只重视一只基金。
基金风险指标：
 标准差：过去一年净值的稳定程度，越低越稳定 beta值：基金波动幅度与打大盘的比值，越低越稳定 夏普指数：每单位反风险带来的收益，越大收益越高。  定投秘籍  越早进场越好 账面亏损无所谓，赎回时要赚钱 定期检视，适时去芜存菁（绩效连续在同类型中处在下游） 只设停利，不设停损（简单计算，年利率是定存的5倍）  单笔投资秘籍  熟悉市场脉动 分批进场，买跌不买涨 定期检视，停利更要止损 懂得分批出场  结合基本面（经济景气）和技术面
基本面  国内生产总值 主要经济指标 美国采购经理指数 消费者物价指数 美联储态度 消费者信心指数  技术面  季线 KD线  结合操作 定投的收益也是市场的重要指标
进场时：先定投，低谷时单笔投资
出场时：先2-3次赎单笔投资，再一次赎回定投
获利后滚入再投资</description>
    </item>
    
    <item>
      <title>读过的一些设计书籍</title>
      <link>https://dailydreamer.me/post/2016-05-24-some-design-books/</link>
      <pubDate>Tue, 24 May 2016 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2016-05-24-some-design-books/</guid>
      <description>最近翻了一下之前记的一些读书笔记，将读过的一些经典的设计书籍总结一下，记录在这里。
不要让我思考 整本书都在传递一个强烈的概念：不要让我思考。用户不喜欢思考，比如用户阅读网页的方式是扫描，选择的时候抱着满意即可、勉强应付的心态。 强迫用户思考会使他们离开你的产品。
下面是几个具体的优化：
 明显标识可点击处，划分页面区域，降低视觉噪音 去掉不必要的文字 统一导航  设计心理学 整本书从心理学的角度看设计。
人认知的基本模型是目标 -&amp;gt; 行动 -&amp;gt; 反馈，好的产品应该有一个好的概念模型
 减少目标到行动认知负担，也即上面提到的不要让我思考 产生合理的反馈  具体有下面几个原则：
 应用存储于外部世界(物理环境)和头脑中(文化标准)的知识，建立界面到功能的自然匹配 简化任务结构 注重可视性，比如一个按钮是一个功能 利用自然和人为的限制因素 考虑可能出现的人为差错，防止错误需要警报或强迫性功能 若无法做到以上几点，就标准化  写给大家看的设计书 这本书主要讲了视觉设计中的几个基本原则：
 亲密性：将相关的项组织在一起，物理位置的接近意味着存在关联 对齐：任何元素都不能在页面上随意摆放，每个元素应当与页面上另一个元素存在某种视觉联系 重复：把现有的一致性向前推进一步 对比：让他们截然不同吧  其他还有注意留白。
设计中的设计 日本设计师原研哉的作品。 一开始只是被书中精美的图片和排版所吸引，但是也收获了不少。
设计师坂茂应原研哉之邀再设计卫生纸时，设计了方形卫生纸。 由于方形的阻力更大会使每次使用的纸变少，而且方形相较于原型更方便运输。 这种再设计可以让人从习以为常的日常中跳脱出来，从另一个角度看问题。
原研哉说，设计师在其受众头脑中创建一种信息建筑，受众通过视觉听觉味觉触觉等感官信息，以及被外界重新唤醒的记忆来构建信息建筑。
原研哉对书和纸的看法：书作为一种存储信息的媒介可能有诸多不便。 但是如果我们好好观察一下信息与个人的关系，会发现重要的其实是我们能多深入的理解信息。 就书而言，我们会有更愉快的用户体验，我们会更中意于那些以适当重量和质地的材料呈现的信息。 这可能就像食物与人类的关系一样。 因为电子媒介的兴起，纸终于能做他该做的事情了——充当一种本性迷人的材料。
他还是无印良品咨询委员会委员。 无印良品的理念是无设计的设计，简单，追求的不是这个好而是这样就好。</description>
    </item>
    
    <item>
      <title>一种新科学</title>
      <link>https://dailydreamer.me/post/2016-03-20-a-new-kind-of-science/</link>
      <pubDate>Sun, 20 Mar 2016 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2016-03-20-a-new-kind-of-science/</guid>
      <description>本书作者是Mathematica之父Stephen Wolfram。 他在完成Mathematica后挣了一大笔钱，然后几十年一直在搞自己喜欢的研究和探索，最终著成本书（论经济基础对研究的重要性）。 虽然书中的研究缺少确实的证据而更多的是作者的猜测，但是以目前的科学也不足以证伪。 不过有计算复杂性科学家发过paper评判这种没有同行评阅和修改的出书模式，并且质疑了其内容的价值。 但是作为思路开阔一读也未尝不可。
而且这本书实在是太长了，并且充满了各种论断但是缺少证据，最终没有看完，日后有机会再补完。
The Foundation for a New Kind of Science 实际上系统理论没必要必须建立在传统数学规律之上。 使用传统数学规则经常无法使用简单的规则解释复杂的自然现象，但是遵从简单规律的程序却可以产生复杂的结果。
Principle of Computational Equivalence: Whenever one sees behavior that is not obviously simple - in essentially any system - it can be thought of as correspoding to a computation of equivalent sophitication.
这个原理揭示了传统数学规则的局限性，它只能解释简单的系统因为它大大简化了计算复杂度。
现在的物理太依赖连续的数学表示或概率，但是离散的其实更简单，并且可以解释很多基本现象。
现在数学不能解释复杂的生物系统，而简单程序可以。
A new kind of science不仅能够解释各个学科的复杂问题，也能对经典的基础问题进行解释。
The Crucial Experiment How do simple program behave? 细胞自动机即使从简单条件开始，遵从简单条件发展，也会展示惊人的复杂性，正如我们在自然中看到的。
尽管每个cell都遵从相同的规律，但是因为环境的不同，它们的行为也不同。
The need for a new intuition 细胞自动机的复杂性与我们认为一个复杂事物必然构成复杂的直觉相反，而这种直觉可能来自于工程中，那里我们从功能出发，逐步将系统分解到细节，我们能预测系统的一切行为。 但是却不是这样，事实上类似细胞自动机这种不可预测的结构在自然中很常见。</description>
    </item>
    
    <item>
      <title>关键对话</title>
      <link>https://dailydreamer.me/post/2016-03-07-difficult-conversation/</link>
      <pubDate>Mon, 07 Mar 2016 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2016-03-07-difficult-conversation/</guid>
      <description>Difficult Conversation(关键对话)，是指让你感到害怕和焦虑的对话，比如家人间、情侣间的吵架，上下级间的工作安排等。 本书对这种对话进行了深入的剖析，将问题分解看透彻之后可以更好的处理这种对话。
The problem 关键对话的结构：
 What happend
 The feelings conversation
 The identity conversation
  我们不能改变周围，但是能改变的是对待这些挑战的反应。
What happend 不要一上来就认为你是对的，试图搞清楚对方的感知、解释和价值观。
对方的意图可能很复杂，不要预先假定是坏的。
不要一味责备对方，试图弄清楚双方对造成问题的贡献。
Feeling conversation 情感是困难对话的核心。
Identity conversation 调整你的认知失调造成的困难感是最有技巧可学习的。
Shift to a learning stance What happend conversation Stop arguing about who&amp;rsquo;s right, explore each other&amp;rsquo;s stories. 每个人对故事的解读都是有道理的。 争吵阻碍了我们从他人的角度理解故事。
为什么会有不同的故事解读：我们注意到的和获取到的信息不同。 我们有不同的解读，受过去经历和隐含的规则的影响。
对他人的故事感到好奇。
有时候了解对方的立场不代表一定要同意，比如提出分手的时候，承认双方的立场。
Don&amp;rsquo;t assume they mean it: disentangle intent from impact. 我们假设别人的意图通常是错的。
试图去理解自己复杂的意图会给对方传递积极和在乎的信号。
将你的意图告诉对方，试图弄清楚你的行为对对方的影响。
Abandon blame: map the contribution system blame是关于judging但是contribution是关于understanding并且looking forward。</description>
    </item>
    
    <item>
      <title>神话的力量</title>
      <link>https://dailydreamer.me/post/2016-01-13-power-of-myth/</link>
      <pubDate>Wed, 13 Jan 2016 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2016-01-13-power-of-myth/</guid>
      <description>前些年读过的一本很神奇的书，记下一些富有力量的话语，有机会要重新温习。
善与恶 善恶是相对于你的立场而定的。 对某人来说是善，对其他人可能就是恶。 但对上帝而言，二者并无不同。 你扮演着自己的角色，即使在你了解他有多可怕后也不退缩，而能把它看成是神秘超越而美妙惊奇世界之前奏。
生命最大的挑战之一，就是肯定你心里最讨厌的人或事。 你不能说不应该有毒蛇，因为那是生命的本来面目。 但是在行动中，假如你看到毒蛇咬人，你会杀了他。 那并不是否定蛇，而是对那个情景说不。
这两句话从更高的层面看待了善与恶的相对性。 每个人都有着自己的使命与愿景，与你相顺的于你即善，与你相逆的于你即恶。 知道没有绝对的善与恶是成熟的标志。
人生的态度 生命一切皆苦，顺其自然，便是喜悦。 但是顺其自然，并不代表自暴自弃随波逐流，这不是必然的结论。 你将参与人生这场游戏，竭尽所能。
不论你在何处，只要遵循你内心直觉的喜悦，你就可以享受到永恒生命之泉的那份清新，它一直在你内心的生命中。
这世界上许多人都不曾停下来，倾听自己或邻人，学习什么是该做的，和什么是他们的生活价值。 对物质的追求是无止境的，但你终将在40岁意识到你已到达人生的巅峰，只有走下坡路的日子可活而陷入深深的忧虑。
你只有一生可活，你不需要为他人而活，要活的专注，遵循内心直觉的喜悦。
这几句话曾经同银他妈，以及后来读到的尼采的永劫回归理论，一起深刻的影响了我的人生抉择。遵从内心的喜悦吧。
神话在今天的意义 艺术家是今日的巫师。而作为普通人，我们应该读书来理解自然的神性。 读对的人写的书，你的心就会被带到某个层次，你可因此而拥有一种美好，温和，慢慢燃烧的喜悦。
不同的个体本是一体的，你们本来就是一个生命的两面，当下的分隔，只不过是在时空条件下，体验形体的方式结果罢了。我们的真实在于与所有的生命结合一致。 这个形而上的真理，可以在危机之下立刻体验到。因为它就是你生命的真理。
整本书读完后，可以感受到神话不只是过去的故事，而是人类祖先古老的共同记忆和模范； 而今天的生活中，虽然不再相信神话表面描述的故事，但是其内涵却依然深深的烙印在我们心底，一直发挥着作用。</description>
    </item>
    
    <item>
      <title>禅与摩托车维修的艺术</title>
      <link>https://dailydreamer.me/post/2015-08-04-zen-and-the-art-of-motorcycle-maintenance/</link>
      <pubDate>Tue, 04 Aug 2015 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2015-08-04-zen-and-the-art-of-motorcycle-maintenance/</guid>
      <description>第三章 科学就是现代的鬼神。 过去人们使用鬼神解释自然现象，现代人们使用所谓的科学来解释。 这些都只存在于人们心里，是对自然规律的一种认识和解释。
第四章 一个世纪前和小孩一起读古典的方式：读两句话，等他一连串的提问，然后回答他的问题。
第六章 使用二分法，将人类的认知分为古典的和浪漫的。 古典的认知认为这个世界是由一些基本形式组成的；浪漫的认知则从表象来观察，主要的是情感而非事实。
斐德洛的古典中有名为分析的小刀。
第七章 我们选择性的筛选出感官接受的结果，浪漫的认知直接针对这个结果，而古典的认知使用分析的小刀对其进行分类，并且注重相互之间的联系。
第八章 摩托车的外观是浪漫的，但是内在的运作是纯古典的。 他的外壳就是古典和浪漫的分界。
摩托车也是一种系统，正如政府和军队。 只要架构系统的理性还在，系统就可以被轻易重新构建。
第九章 逻辑使你在系统中找到自己的路。逻辑有归纳法和演绎法。 两种方法交替使用就能解决问题。
第十章 前面铺垫了那么多，这一章开始渐渐接近了问题的核心。
在科学的殿堂中有许多深宅大院。 有的人倾心科学是因为优越的智力，有的人则完全为了实用的目的。 如果上帝派来的天使将上面两种人从殿中驱逐出去，那么殿里会空旷许多。 那些获得天使青睐的人，有些古怪、沉默和孤独，除了同是不受欢迎的人外，彼此之间少有相似之处。 斐德洛认为自己就是这样的人。 所以当他提出科学困扰他的问题时，没有人真正关心。于是他开始了心灵探索的道路。
困扰他的问题是什么呢?
科学研究，或者说自然科学的研究，是通过观察现象做出假设然后实验证明得出结论。 爱因斯坦认为，根据进化论所显示的，在历史上任何一刻，所有可想见的存在，总有一个会证明它比其他一切要优越。 但是斐德洛认为现在由于眼界的广阔，假设出现的速度远大于验证他们的速度，因此科学真理持续的时间越来越短，很容易被后来验证的假设推翻。 各种假设和定理的增加，把人从唯一绝对的真理，引向多元、摇摆不定、相对的世界，是造成社会和思想价值混乱的元凶。 现在的理性结构不符合社会所需，然而在情感上空虚，在美学上没有任何表现。 造成社会上一些人在整个文明的理性架构下，活的盲目而疏离，找寻不到答案。
我以为因为斐德洛是搞生物化学的，如果他从事过数学研究就会发现这个所有自然科学的根基是一门注重概念的演绎科学，不是使用实验证明假设，而是靠演绎。 依靠最底下的公理构建起整个大树。 每当物理学家走的飞快依靠直觉提出各种假设，数学总是跟在后面谨慎的证明。 虽然偶尔出现过改变公理构建出不同大树的情况，但总体上没有这个问题。 壮哉我大数学~
第十一章 斐德洛通过哲学探索人类心灵的高山地带。
大卫·休谟的经验主义，认为我们的知识都来自于感官。 但是会得出推论说整个世界出自于人的想象。
康德试图推翻经验主义。 他认为我们人性之中有一种直觉，我们认为的现实，是直觉和感官接收到的讯息融合而成。 我们通过感官接收到的讯息不断修正直觉，直觉也在过滤着感官接收到的讯息。
斐德洛认为康德的《纯粹理性批判》中有着属于理性自身的丑陋。
第十二章 斐德洛之后去了印度研究东方哲学，他的知识在那儿出现了混乱。 他离开了印度，放弃了对理性的追求，念了新闻学位，结婚生子。
放下了之后，反而成熟的更快。 于是他变成我们的作者又开始继续追寻，通过这次旅途。
第十三章 斐德洛说，真正的大学是心灵的世界，是多少世纪以来流传给我们的理性思想，大学的本质在于通过教授们流传下来的理性自身。 物质的大学只是为真正的理性教会提供了生存的环境。
斐德洛因为对科学理性缺乏信心，所以才成为了理性教会的狂热研究者。
第十四章 科学没有和人的心灵连在一起，所以在盲目之中暴露出了丑陋的一面。 解决的方法不是抛弃或否定理性，而是扩展理性的内涵。
哥伦布发现新大陆时也拓展了整个文化的根基，当时人们抛弃了中古世纪的价值观，接受理性的新世界。
第十五章 重返斐德洛教书的地方，探寻良质的意义。
第十六章 良质的第一部分，模仿是一种罪恶。 是学校的教育造成了这一点，他试图取消分数和学位制度，但是并没有得到好的结果。
第十七章 良质是说一篇优秀的作品不需要任何规则，不需要任何理论，然而他指向某种东西，非常真实。 不是模仿，而是內驱的创造。</description>
    </item>
    
    <item>
      <title>人人都是产品经理</title>
      <link>https://dailydreamer.me/post/2015-07-25-product-manager/</link>
      <pubDate>Sat, 25 Jul 2015 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2015-07-25-product-manager/</guid>
      <description>写给-1到3岁的产品经理 我们到底是不是产品经理 产品是可以满足人需求的载体，商业产品在用户需求和商业目标之间平衡。
宝洁产生了产品经理的概念。
传统产品经理是品牌经理或产品市场经理，重在营销。
   Type 典型的传统行业 互联网、软件行业     行业形态 成熟行业 新兴行业   产品形态与成本结构 实物 虚拟物品   生命周期 几年 几个月   盈利模式 单一卖产品赚钱 多元盈利   用户心态 花钱买 免费用    互联网软件行业产品创新多，产品经理注重产品功能规划。
产品多为虚拟物品，因此注重需求分析和设计细节。
产品生命周期短，产品经理在项目完成度和产品质量间做平衡。
盈利模式更多元，靠用户数量，产品经理重视用户研究和用户需求。
用户免费用，更换成本小，用户是上帝，重视用户体验。
管理是在资源不足的情况下把事情做成的能力。而资源不足是常态，因此你已是产品经理。
我真的想做，怎么入行 喜欢做产品，并且不是站在用户角度，而是站在产品经理角度看待产品。
研究产品经理招聘广告并总形成调研报告。
一个需求的奋斗史 用户研究-&amp;gt;需求采集-&amp;gt;需求分析-&amp;gt;需求筛选-&amp;gt;需求管理。
需求采集的大生产运功 明确目标，明确采集方法，制定采集计划，执行采集，资料整理，然后进需求分析。
定性的说：用户访谈。
 为避免说的和做的不一致，可以尽量在用户和产品交互的场合下进行。
 要避免样本少，以偏概全。
 牢记访谈目的，不要太强势，也不要被用户代跑。
 避免一组固定的问题。这会让用户有被审问的感觉。
 首先关注目标，任务其次，多问为什么这么做。
 避免让用户成为设计师，用户的解决方案通常短浅片面(这个深有体会。。。)。
 避免讨论技术。</description>
    </item>
    
    <item>
      <title>UNIX编程艺术</title>
      <link>https://dailydreamer.me/post/2015-06-28-unix-programming-art/</link>
      <pubDate>Sun, 28 Jun 2015 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2015-06-28-unix-programming-art/</guid>
      <description>这本书极为经典，虽然后半部分的细节有些过时，但是前面的哲学影响深远且富有启发性。
哲学 UNIX有它独有的文化和哲学，它富有生命力且影响深远。UNIX诞生于1969年，而今天化身为Linux、BSD、MacOS X等，应用广泛且强大。
UNIX文件在字节层次上再无结构，文件删除了无法恢复，作业控制有欠精致，命名方式混乱。这些都是UNIX的缺点。
最大的争议在于，提供机制，而不是策略。 比如X Window，提供一套极端通用的图形操作，将界面的观感(策略)推后到应用层。 这使得UNIX可以提供很多行为选项和令人眼花缭乱的定制功能。 然而它的代价就是当用户“可以”设置自己的策略时，他们“必须”设置自己的策略。 这使得UNIX失去了很多非技术用户，但是策略相对短寿，机制才会长存。 只提供机制才能使得UNIX长久保鲜。
同时，UNIX还有着及其丰富和优秀的外围文化。 开源软件，跨平台可移植和开放标准(IEEE的可移植操作系统标准POS很快被大家加后缀变成了POSIX)，Internet和TCP/IP协议，开源社区，从头到脚的灵活性(在其他系统中，完成设计者预见的任务容易，但是设计者没有预料到的就很难)，以及UNIX hack很有乐趣。
UNIX哲学起源与Ken Thompson早期关于如何设计一个服务接口简洁、小巧精干的操作系统的思考，一路成长且博采众长。 UNIX管道的发明人Doug Mcllroy总结，UNIX哲学是一个程序只做一件事，并做好。程序要能协作。 程序要能处理文本流，因为这是最通用的接口。整体上，UNIX哲学可以概括为一下几点：
 模块原则：使用简洁的接口拼合简单的部件
编制复杂软件而又不至于一败涂地的唯一非方法就是降低其整体复杂度，用清晰的接口把若干简单的模块组合成一个复杂的软件。
 清晰原则：清晰胜于机巧
些程序时，要想到你不是写给计算机看，而是写给人看的。优雅而清晰的代码不仅不容易崩溃，而且更易于让后来的修改者立刻理解。
 组合原则：设计时考虑拼接
在输入输出方面，UNIX传统极力提倡采用简单、文本化、面向流、设备无关的格式，否则很难和其它程序衔接。要想让程序具有组合性，就要使程序彼此独立。
 分离原则：策略同机制分离，接口同引擎分离
策略短寿，机制长存。在探索新策略的时候尽量不要打破机制，这样也可以为机制编写更好的测试。
在GUI之外也可以应用这个原则，如Emacs编辑器使用内嵌的脚本语言Lisp解释器来控制用C编写的编辑原语操作。
 简洁原则：设计要简洁，复杂度要低
复杂的东西代价更高，bug更多。以简洁为美，总设法将程序系统分解成几个能够协作的小部分。
 透明性原则：设计要可见，以便审查和调试。
透明性是说一眼能看出软件是在做什么以及怎样做的，显见性是说程序带有监视和显示内部状态的功能。尽早设置调试选项。
 健壮原则：健壮源于透明与简洁
健壮性指在超出设计者预想外的条件下也能运行良好。
 表示原则：把知识叠入数据以求逻辑质朴而健壮。
数据比变成逻辑更容易驾驭。主动将代码的复杂度转移到数据之中去。
 通俗原则：接口设计避免标新立异
 缄默原则：如果一个程序没什么好说的，就保持沉默
只输出重要的东西。
 补救原则：出现异常时，马上退出并给出足量错误信息
“宽容的收，谨慎的发”。
 经济原则：宁花机器一分，不花程序员一秒
 生成原则：避免手工hack，尽量编写程序去生成程序
 优化原则：雕琢之前先有型
先制作原型，再精雕细琢。从原型中寻找通过牺牲最小局部简洁性而获得较大性能提升的地方。
 多样原则：绝不相信所谓“不二法门”断言
 扩展原则：设计着眼未来，未来总比预想的快
一言以蔽之，就是KISS，Keep it simple and stupid。</description>
    </item>
    
    <item>
      <title>程序员修炼之道</title>
      <link>https://dailydreamer.me/post/2015-06-04-a-pragmatic-programmer/</link>
      <pubDate>Thu, 04 Jun 2015 20:00:00 +0800</pubDate>
      
      <guid>https://dailydreamer.me/post/2015-06-04-a-pragmatic-programmer/</guid>
      <description>这本书出版有些年头了，虽然其中的例子有些老旧，但是有些思想和哲学永远不会过时。
注重实效的哲学 负责，提供各种选择，不找蹩脚的借口。
避免软件腐烂，破窗效应，不要容忍破窗户。
启动杂役，做变化的催化剂。
不要被温水煮青蛙，留意大图景。
让用户参与权衡，使质量成为需求问题。
像管理金融资产一样管理知识资产。定期为你的知识资产投资。
不要搁置问题。
批判的分析你读到的和听到的。
注重交流，想清楚你要说什么，了解听众。
注重实效的途径 重复的危害 系统中的每一项知识都必须具有单一、无歧义、权威的表示。Don&amp;rsquo;t Repeat Yourself！这不是你是否能记住的问题，而是何时忘记的问题。
强加的重复：
客户端服务器端不同语言：可以根据元数据在Build时生成不同语言的类定义及结构。
根据需求文档自动生成测试。
无意的重复：
需要缓存时可能会破坏DRY原则，但是应该在类内部解决，不要将其暴露给外界。
正交性 消除无关事物之间的影响。
可撤销性 不存在最终决策，采用灵活的架构。
曳光弹 用曳光弹找到目标，给出可展示的项目骨架，它可以即时的反馈。
原型与便笺 为了学习而制作原型。原型甚至可以不用编码，他需要确定各个组件的责任和是否解耦。
基本工具 用纯文本保存知识。它不会过时，更易测试。
要修正问题，而不是发出指责。
再现bug，使数据可视化。
向别人讲述你的代码要做什么时可能会帮助你理清思路。
不要假定，要证明。
注重实效的偏执 你不可能写出完美的软件。
DBC 按合约设计 前条件，后条件，类不变项。
死程序不说谎 早崩溃，要崩溃不要破坏。
断言式编程 如果他不可能发生，用断言确保。
弯曲，或折断 使模块之间的耦合减至最小。
要配置，不要集成。
将抽象放进代码，将细节放进元数据。
总是为并发进行设计。
使模型与视图分离。
当你编码时 不要靠巧合编程。
为你的假定建立文档。
早重构，常重构。这是一种痛苦管理。经常进行短小的重构之后测试。
测试驱动的设计。测试你的软件，否则你的用户就得测试。
与用户一同工作，以像用户一样思考。
抽象比细节获得更长久。
不要在盒子外面思考，要找到盒子，即真正的约束。亚历山大大帝用剑劈开了弗里吉亚国王戈尔系的号称解不开的结。
有些事情去做胜于描述，比如试着描述一下你系鞋带的过程。不要一开始编写太过详尽的规范。它和编码总是交替进行。
不要做形式方法的奴隶，有时原型展示比UML图更有说服力。昂贵的工具不一定能制作出更好的设计。
注重实效的项目 不要使用手工流程。
早测试，常测试，自动测试。
温和的超出用户的期望。与用户交流期望。
在你的作品上签名。这是责任和荣耀的表现。</description>
    </item>
    
  </channel>
</rss>